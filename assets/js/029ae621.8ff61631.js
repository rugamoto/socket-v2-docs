"use strict";(self.webpackChunksocket_v_2_docs=self.webpackChunksocket_v_2_docs||[]).push([[131],{3905:function(e,t,a){a.d(t,{Zo:function(){return u},kt:function(){return m}});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=r.createContext({}),p=function(e){var t=r.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},u=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=p(a),m=n,k=c["".concat(s,".").concat(m)]||c[m]||d[m]||i;return a?r.createElement(k,o(o({ref:t},u),{},{components:a})):r.createElement(k,o({ref:t},u))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,o=new Array(i);o[0]=c;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:n,o[1]=l;for(var p=2;p<i;p++)o[p]=a[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}c.displayName="MDXCreateElement"},4221:function(e,t,a){a.r(t),a.d(t,{assets:function(){return u},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return d}});var r=a(7462),n=a(3366),i=(a(7294),a(3905)),o=["components"],l={},s="Routes",p={unversionedId:"reference/api/Routes",id:"reference/api/Routes",title:"Routes",description:"Table of contents",source:"@site/docs/reference/api/Routes.md",sourceDirName:"reference/api",slug:"/reference/api/Routes",permalink:"/socket-v2-docs/reference/api/Routes",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/reference/api/Routes.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Quote",permalink:"/socket-v2-docs/reference/api/Quote"},next:{title:"Server",permalink:"/socket-v2-docs/reference/api/Server"}},u={},d=[{value:"Table of contents",id:"table-of-contents",level:2},{value:"Constructors",id:"constructors",level:3},{value:"Methods",id:"methods",level:3},{value:"Constructors",id:"constructors-1",level:2},{value:"constructor",id:"constructor",level:3},{value:"Methods",id:"methods-1",level:2},{value:"getActiveRoute",id:"getactiveroute",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"getActiveRoutesForUser",id:"getactiveroutesforuser",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in-1",level:4},{value:"nextTx",id:"nexttx",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Returns",id:"returns-2",level:4},{value:"Defined in",id:"defined-in-2",level:4},{value:"startActiveRoute",id:"startactiveroute",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Returns",id:"returns-3",level:4},{value:"Defined in",id:"defined-in-3",level:4},{value:"updateActiveRoute",id:"updateactiveroute",level:3},{value:"Parameters",id:"parameters-4",level:4},{value:"Returns",id:"returns-4",level:4},{value:"Defined in",id:"defined-in-4",level:4}],c={toc:d};function m(e){var t=e.components,a=(0,n.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"routes"},"Routes"),(0,i.kt)("h2",{id:"table-of-contents"},"Table of contents"),(0,i.kt)("h3",{id:"constructors"},"Constructors"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/socket-v2-docs/reference/api/Routes#constructor"},"constructor"))),(0,i.kt)("h3",{id:"methods"},"Methods"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/socket-v2-docs/reference/api/Routes#getactiveroute"},"getActiveRoute")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/socket-v2-docs/reference/api/Routes#getactiveroutesforuser"},"getActiveRoutesForUser")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/socket-v2-docs/reference/api/Routes#nexttx"},"nextTx")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/socket-v2-docs/reference/api/Routes#startactiveroute"},"startActiveRoute")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/socket-v2-docs/reference/api/Routes#updateactiveroute"},"updateActiveRoute"))),(0,i.kt)("h2",{id:"constructors-1"},"Constructors"),(0,i.kt)("h3",{id:"constructor"},"constructor"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"new Routes"),"()"),(0,i.kt)("h2",{id:"methods-1"},"Methods"),(0,i.kt)("h3",{id:"getactiveroute"},"getActiveRoute"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,i.kt)("strong",{parentName:"p"},"getActiveRoute"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"__namedParameters"),"): ",(0,i.kt)("a",{parentName:"p",href:"/socket-v2-docs/reference/client/CancelablePromise"},(0,i.kt)("inlineCode",{parentName:"a"},"CancelablePromise")),"<",(0,i.kt)("inlineCode",{parentName:"p"},"ActiveRouteOutputDTO"),">"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"throws"))," ApiError"),(0,i.kt)("h4",{id:"parameters"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"__namedParameters")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Object")),(0,i.kt)("td",{parentName:"tr",align:"left"},"-")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"__namedParameters.activeRouteId")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Id of the Active Route.")))),(0,i.kt)("h4",{id:"returns"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/socket-v2-docs/reference/client/CancelablePromise"},(0,i.kt)("inlineCode",{parentName:"a"},"CancelablePromise")),"<",(0,i.kt)("inlineCode",{parentName:"p"},"ActiveRouteOutputDTO"),">"),(0,i.kt)("p",null,"ActiveRouteDTO Get active route details using active route id"),(0,i.kt)("h4",{id:"defined-in"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/rugamoto/socket-v2-sdk/blob/72e8f92/src/client/services/Routes.ts#L43"},"src/client/services/Routes.ts:43")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getactiveroutesforuser"},"getActiveRoutesForUser"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,i.kt)("strong",{parentName:"p"},"getActiveRoutesForUser"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"request"),"): ",(0,i.kt)("a",{parentName:"p",href:"/socket-v2-docs/reference/client/CancelablePromise"},(0,i.kt)("inlineCode",{parentName:"a"},"CancelablePromise")),"<",(0,i.kt)("a",{parentName:"p",href:"/socket-v2-docs/reference/types#activeroutesoutputdto"},(0,i.kt)("inlineCode",{parentName:"a"},"ActiveRoutesOutputDTO")),">"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"throws"))," ApiError"),(0,i.kt)("h4",{id:"parameters-1"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"request")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"ActiveRoutesRequest"))))),(0,i.kt)("h4",{id:"returns-1"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/socket-v2-docs/reference/client/CancelablePromise"},(0,i.kt)("inlineCode",{parentName:"a"},"CancelablePromise")),"<",(0,i.kt)("a",{parentName:"p",href:"/socket-v2-docs/reference/types#activeroutesoutputdto"},(0,i.kt)("inlineCode",{parentName:"a"},"ActiveRoutesOutputDTO")),">"),(0,i.kt)("p",null,"ActiveRoutesOutputDTO Get all the active routes from a user address. Filters like fromChainId, toChainId and token addresses can be used to get back specific active routes."),(0,i.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/rugamoto/socket-v2-sdk/blob/72e8f92/src/client/services/Routes.ts#L65"},"src/client/services/Routes.ts:65")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"nexttx"},"nextTx"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,i.kt)("strong",{parentName:"p"},"nextTx"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"__namedParameters"),"): ",(0,i.kt)("a",{parentName:"p",href:"/socket-v2-docs/reference/client/CancelablePromise"},(0,i.kt)("inlineCode",{parentName:"a"},"CancelablePromise")),"<",(0,i.kt)("a",{parentName:"p",href:"/socket-v2-docs/reference/types#nexttxoutputdto"},(0,i.kt)("inlineCode",{parentName:"a"},"NextTxOutputDTO")),">"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"throws"))," ApiError"),(0,i.kt)("h4",{id:"parameters-2"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"__namedParameters")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Object")),(0,i.kt)("td",{parentName:"tr",align:"left"},"-")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"__namedParameters.activeRouteId")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Id of Active Route.")))),(0,i.kt)("h4",{id:"returns-2"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/socket-v2-docs/reference/client/CancelablePromise"},(0,i.kt)("inlineCode",{parentName:"a"},"CancelablePromise")),"<",(0,i.kt)("a",{parentName:"p",href:"/socket-v2-docs/reference/types#nexttxoutputdto"},(0,i.kt)("inlineCode",{parentName:"a"},"NextTxOutputDTO")),">"),(0,i.kt)("p",null,"NextTxOutputDTO Get next tx details of an active route"),(0,i.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/rugamoto/socket-v2-sdk/blob/72e8f92/src/client/services/Routes.ts#L82"},"src/client/services/Routes.ts:82")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"startactiveroute"},"startActiveRoute"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,i.kt)("strong",{parentName:"p"},"startActiveRoute"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"__namedParameters"),"): ",(0,i.kt)("a",{parentName:"p",href:"/socket-v2-docs/reference/client/CancelablePromise"},(0,i.kt)("inlineCode",{parentName:"a"},"CancelablePromise")),"<",(0,i.kt)("a",{parentName:"p",href:"/socket-v2-docs/reference/types#nexttxoutputdto"},(0,i.kt)("inlineCode",{parentName:"a"},"NextTxOutputDTO")),">"),(0,i.kt)("p",null,"Function that takes in a route and starts the selected route.\nFunction is responsible for"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Saving the selected route to bridge tokens from one chain to another."),(0,i.kt)("li",{parentName:"ul"},"Saving the fromChain, toChain, and fromAsssetAddress and toAssetAddress"),(0,i.kt)("li",{parentName:"ul"},"Returns the Active Route Id, Current Tx, Total number of txs, txType")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"throws"))," ApiError"),(0,i.kt)("h4",{id:"parameters-3"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"__namedParameters")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Object"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"__namedParameters.startRequest")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/socket-v2-docs/reference/types#startactiverouteinputdto"},(0,i.kt)("inlineCode",{parentName:"a"},"StartActiveRouteInputDTO")))))),(0,i.kt)("h4",{id:"returns-3"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/socket-v2-docs/reference/client/CancelablePromise"},(0,i.kt)("inlineCode",{parentName:"a"},"CancelablePromise")),"<",(0,i.kt)("a",{parentName:"p",href:"/socket-v2-docs/reference/types#nexttxoutputdto"},(0,i.kt)("inlineCode",{parentName:"a"},"NextTxOutputDTO")),">"),(0,i.kt)("p",null,"StartActiveRouteResponseDTO Starts the Active Route and gives back the data to start the route"),(0,i.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/rugamoto/socket-v2-sdk/blob/72e8f92/src/client/services/Routes.ts#L23"},"src/client/services/Routes.ts:23")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"updateactiveroute"},"updateActiveRoute"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,i.kt)("strong",{parentName:"p"},"updateActiveRoute"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"__namedParameters"),"): ",(0,i.kt)("a",{parentName:"p",href:"/socket-v2-docs/reference/client/CancelablePromise"},(0,i.kt)("inlineCode",{parentName:"a"},"CancelablePromise")),"<",(0,i.kt)("a",{parentName:"p",href:"/socket-v2-docs/reference/types#routestatusoutputdto"},(0,i.kt)("inlineCode",{parentName:"a"},"RouteStatusOutputDTO")),">"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"throws"))," ApiError"),(0,i.kt)("h4",{id:"parameters-4"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"__namedParameters")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Object")),(0,i.kt)("td",{parentName:"tr",align:"left"},"-")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"__namedParameters.activeRouteId")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Id of Active Route.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"__namedParameters.signature?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Signature to be sent in case the next transaction is dependant on the signature.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"__namedParameters.txHash?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Transaction hash that relates to the userTxIndex. Each object in the userTxs is a transaction that has to be done by the user to progress in the route. If all the transactions are completed in the route, it will be marked complete.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"__namedParameters.userTxIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Index of the userTxs in the Active Route. Every active route will have a userTxs array. userTxIndex is the index of the object in the userTxs array.")))),(0,i.kt)("h4",{id:"returns-4"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/socket-v2-docs/reference/client/CancelablePromise"},(0,i.kt)("inlineCode",{parentName:"a"},"CancelablePromise")),"<",(0,i.kt)("a",{parentName:"p",href:"/socket-v2-docs/reference/types#routestatusoutputdto"},(0,i.kt)("inlineCode",{parentName:"a"},"RouteStatusOutputDTO")),">"),(0,i.kt)("p",null,"RouteStatusOutputDTO Get status of an active route while submitting transaction"),(0,i.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/rugamoto/socket-v2-sdk/blob/72e8f92/src/client/services/Routes.ts#L104"},"src/client/services/Routes.ts:104")))}m.isMDXComponent=!0}}]);